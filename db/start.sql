CREATE DATABASE request;
USE request;
CREATE TABLE USERS(
  USERNAME VARCHAR (20)   NOT NULL,
  FIRSTNAME VARCHAR (20)  NOT NULL,
  LASTNAME  VARCHAR (20)  NOT NULL,
  PASSWORD CHAR (25)      NOT NULL,
  SALT  CHAR (10)         NOT NULL,
  ADDRESS  CHAR (25),
  PRIMARY KEY (USERNAME)
);
CREATE TABLE REQUESTS(
  ID    INT                NOT NULL,
  DATE DATETIME            NOT NULL,
  SENDER  INT              NOT NULL,
  RECEIVER  INT            NOT NULL,
  AMOUNT DOUBLE(10, 2)     NOT NULL,
  DESCRIPTION   CHAR (25),
  PRIMARY KEY (ID)
);
CREATE TABLE LEDGER(
  ID    INT                NOT NULL,
  DATE  DATETIME           NOT NULL,
  AMOUNT  DOUBLE(10, 2),
  DEBIT_USER INT           NOT NULL,
  CREDIT_USER INT          NOT NULL,
  PRIMARY KEY (ID)
);
CREATE TABLE ACTIVE(
  OWER    INT              NOT NULL,
  OWED    INT              NOT NULL,
  AMOUNT  DOUBLE(10, 2)    NOT NULL,
  PRIMARY KEY (OWER,OWED)
);
CREATE TABLE FRIENDS(
  USER_1      VARCHAR (20) NOT NULL,
  USER_2      VARCHAR (20) NOT NULL,
  STATUS      INT          NOT NULL,
  ACTION_USER VARCHAR (20) NOT NULL,
  PRIMARY KEY (USER_1,USER_2)
);
DELIMITER //
CREATE TRIGGER isActive
   AFTER INSERT ON LEDGER
   FOR EACH ROW
   BEGIN
     DECLARE x DOUBLE(10,2);
     IF ((NEW.DEBIT_USER, NEW.CREDIT_USER) IN (
       SELECT OWED, OWER FROM ACTIVE
     )) THEN
        UPDATE ACTIVE SET ACTIVE.AMOUNT = ACTIVE.AMOUNT+NEW.AMOUNT WHERE NEW.DEBIT_USER = OWED AND NEW.CREDIT_USER = OWER;
     ELSEIF ((NEW.DEBIT_USER, NEW.CREDIT_USER) IN (
       SELECT OWER, OWED FROM ACTIVE
     )) THEN
        SET x := (SELECT AMOUNT FROM ACTIVE WHERE NEW.DEBIT_USER = OWER AND NEW.CREDIT_USER = OWED);
        IF(x > NEW.AMOUNT) THEN
          UPDATE ACTIVE SET AMOUNT = AMOUNT-NEW.AMOUNT WHERE NEW.DEBIT_USER = OWER AND NEW.CREDIT_USER = OWED;
        ELSEIF (NEW.AMOUNT = x) THEN
          DELETE FROM ACTIVE WHERE NEW.DEBIT_USER = OWER AND NEW.CREDIT_USER = OWED;
        ELSE
          DELETE FROM ACTIVE WHERE NEW.DEBIT_USER = OWER AND NEW.CREDIT_USER = OWED;
          INSERT INTO ACTIVE (OWER,OWED,AMOUNT) VALUES(NEW.CREDIT_USER, NEW.DEBIT_USER, NEW.AMOUNT - x);
        END IF;
     ELSE
        INSERT INTO ACTIVE (OWER, OWED, AMOUNT) VALUES (NEW.CREDIT_USER, NEW.DEBIT_USER,NEW.AMOUNT);
     END IF;
  END;//
DELIMITER ;
