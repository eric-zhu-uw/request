CREATE DATABASE request;
USE request;
CREATE TABLE USERS(
  USERNAME VARCHAR (20)   NOT NULL,
  FIRSTNAME VARCHAR (20)  NOT NULL,
  LASTNAME  VARCHAR (20)  NOT NULL,
  PASSWORD CHAR (25)  NOT NULL,
  SALT  CHAR (10) NOT NULL,
  ADDRESS  CHAR (25),
  PRIMARY KEY (USERNAME)
);
CREATE TABLE REQUESTS(
  ID    INT             NOT NULL,
  DATE DATETIME         NOT NULL,
  SENDER  INT           NOT NULL,
  RECEIVER  INT         NOT NULL,
  AMOUNT DOUBLE(10, 2)  NOT NULL,
  DESCRIPTION   CHAR (25),
  PRIMARY KEY (ID)
);
CREATE TABLE LEDGER(
  ID    INT   NOT NULL,
  DATE  DATETIME  NOT NULL,
  DEBIT   DOUBLE(10, 2),
  DEBIT_USER INT NOT NULL,
  CREDIT  DOUBLE(10, 2),
  CREDIT_USER INT NOT NULL,
  PRIMARY KEY (ID)
);
CREATE TABLE ACTIVE(
  OWER    INT   NOT NULL,
  OWED    INT   NOT NULL,
  AMOUNT  DOUBLE(10, 2) NOT NULL,
  PRIMARY KEY (OWER,OWED)
);
DELIMITER //
CREATE TRIGGER isActive
   AFTER INSERT ON LEDGER
   FOR EACH ROW
   BEGIN
     DECLARE x DOUBLE(10,2);
     IF ((new.DEBIT_USER, new.CREDIT_USER) IN (
       SELECT OWED, OWER FROM ACTIVE
     )) THEN
        UPDATE ACTIVE SET AMOUNT = AMOUNT+new.DEBIT WHERE new.DEBIT_USER = OWED AND new.CREDIT_USER = OWER;
     ELSEIF ((new.DEBIT_USER, new.CREDIT_USER) IN (
       SELECT OWER, OWED FROM ACTIVE
     )) THEN
        SET x := (SELECT AMOUNT FROM ACTIVE WHERE new.DEBIT_USER = OWER AND new.CREDIT_USER = OWED);
        IF(x > new.DEBIT) THEN
          UPDATE ACTIVE SET AMOUNT = AMOUNT-new.DEBIT WHERE new.DEBIT_USER = OWER AND new.CREDIT_USER = OWED;
        ELSEIF (new.DEBIT = x) THEN
          DELETE FROM ACTIVE WHERE new.DEBIT_USER = OWER AND new.CREDIT_USER = OWED;
        ELSE
          DELETE FROM ACTIVE WHERE new.DEBIT_USER = OWER AND new.CREDIT_USER = OWED;
          INSERT INTO ACTIVE (OWER,OWED,AMOUNT) VALUES(new.CREDIT_USER, new.DEBIT_USER, new.DEBIT - x);
        END IF;
     ELSE
        INSERT INTO ACTIVE (OWER, OWED, AMOUNT) VALUES (new.CREDIT_USER, new.DEBIT_USER,new.DEBIT);
     END IF;
  END;//
DELIMITER ;
